// <auto-generated />
using System;
using GestEase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestEase.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("GestEase.Models.ArticleCommande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CommandeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("commande_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<double>("PrixUnitaire")
                        .HasColumnType("REAL")
                        .HasColumnName("prix_unitaire");

                    b.Property<int>("Quantite")
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantite");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("statut");

                    b.Property<string>("Unite")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("unite");

                    b.HasKey("Id");

                    b.HasIndex("CommandeId");

                    b.ToTable("articles_commande");
                });

            modelBuilder.Entity("GestEase.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomCategorie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("GestEase.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("adresse");

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("code_postal");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_creation");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nom");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("telephone");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ville");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("GestEase.Models.Commande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_commande");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_creation");

                    b.Property<DateTime?>("DateLivraisonPrevue")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_livraison_prevue");

                    b.Property<DateTime?>("DateLivraisonReelle")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_livraison_reelle");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_modification");

                    b.Property<int?>("FournisseurId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("fournisseur_id");

                    b.Property<double?>("MontantTotal")
                        .HasColumnType("REAL")
                        .HasColumnName("montant_total");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("notes");

                    b.Property<string>("NumeroCommande")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("numero_commande");

                    b.Property<int?>("ProjetId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("projet_id");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("statut");

                    b.HasKey("Id");

                    b.HasIndex("FournisseurId");

                    b.HasIndex("ProjetId");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("GestEase.Models.Dessin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_creation");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_modification");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Dessinateur")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("dessinateur");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("document_id");

                    b.Property<int?>("DocumentProjetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("numero");

                    b.Property<int?>("ProjetId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("projet_id");

                    b.Property<string>("Revision")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("revision");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("statut");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("titre");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("DocumentProjetId");

                    b.HasIndex("ProjetId");

                    b.ToTable("Dessins");
                });

            modelBuilder.Entity("GestEase.Models.DimensionProduit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dimension1")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("dimension1");

                    b.Property<string>("Dimension2")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("dimension2");

                    b.Property<string>("Dimension3")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("dimension3");

                    b.Property<double?>("Longueur")
                        .HasColumnType("REAL")
                        .HasColumnName("longueur");

                    b.Property<int>("ProduitId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("produit_id");

                    b.Property<string>("Unite")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("unite");

                    b.HasKey("Id");

                    b.HasIndex("ProduitId");

                    b.ToTable("dimensions_produits");
                });

            modelBuilder.Entity("GestEase.Models.DocumentProjet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CheminFichier")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("chemin_fichier");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_creation");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nom");

                    b.Property<int?>("ProjetId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("projet_id");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("ProjetId");

                    b.ToTable("documents");
                });

            modelBuilder.Entity("GestEase.Models.Facture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("client_id");

                    b.Property<int>("CommandeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("commande_id");

                    b.Property<DateTime>("DateEmission")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_facture");

                    b.Property<DateTime?>("DatePaiement")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_paiement");

                    b.Property<double>("MontantTotal")
                        .HasColumnType("REAL")
                        .HasColumnName("montant_total");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("notes");

                    b.Property<string>("NumeroFacture")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("numero");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CommandeId");

                    b.ToTable("factures");
                });

            modelBuilder.Entity("GestEase.Models.Fournisseur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("adresse");

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("code_postal");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("contact");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Entreprise")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("entreprise");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("fax");

                    b.Property<string>("Poste")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("poste");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("telephone");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ville");

                    b.HasKey("Id");

                    b.ToTable("Fournisseurs");
                });

            modelBuilder.Entity("GestEase.Models.HistoriquePrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateChangement")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_changement");

                    b.Property<double>("Prix")
                        .HasColumnType("REAL")
                        .HasColumnName("prix");

                    b.Property<int>("ProduitId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("produit_id");

                    b.HasKey("Id");

                    b.HasIndex("ProduitId");

                    b.ToTable("historique_prix");
                });

            modelBuilder.Entity("GestEase.Models.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategorieId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("categorie_id");

                    b.Property<string>("CodeFournisseur")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("code_fournisseur");

                    b.Property<DateTime?>("DateMiseAJour")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_mise_a_jour");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("DescriptionSommaire")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("description_sommaire");

                    b.Property<int?>("FournisseurId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("fournisseur_id");

                    b.Property<double?>("PrixListe")
                        .HasColumnType("REAL")
                        .HasColumnName("prix_liste");

                    b.Property<double?>("PrixUnitaire")
                        .HasColumnType("REAL")
                        .HasColumnName("prix_unitaire");

                    b.Property<int?>("QuantiteMin")
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantite_min");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("FournisseurId");

                    b.ToTable("produits");
                });

            modelBuilder.Entity("GestEase.Models.Projet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("client_id");

                    b.Property<DateTime?>("DateDebut")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_debut");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_fin");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nom");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("statut");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("projets");
                });

            modelBuilder.Entity("GestEase.Models.StockProduit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateDerniereVerification")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_derniere_verification");

                    b.Property<string>("Localisation")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("localisation");

                    b.Property<int>("ProduitId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("produit_id");

                    b.Property<int?>("ProjetId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("projet_id");

                    b.Property<int?>("Quantite")
                        .HasColumnType("INTEGER")
                        .HasColumnName("quantite");

                    b.Property<double?>("ValeurInventaire")
                        .HasColumnType("REAL")
                        .HasColumnName("valeur_inventaire");

                    b.HasKey("Id");

                    b.HasIndex("ProduitId");

                    b.HasIndex("ProjetId");

                    b.ToTable("stock_produits");
                });

            modelBuilder.Entity("GestEase.Models.ArticleCommande", b =>
                {
                    b.HasOne("GestEase.Models.Commande", "Commande")
                        .WithMany()
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commande");
                });

            modelBuilder.Entity("GestEase.Models.Commande", b =>
                {
                    b.HasOne("GestEase.Models.Fournisseur", "Fournisseur")
                        .WithMany()
                        .HasForeignKey("FournisseurId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GestEase.Models.Projet", "Projet")
                        .WithMany()
                        .HasForeignKey("ProjetId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Fournisseur");

                    b.Navigation("Projet");
                });

            modelBuilder.Entity("GestEase.Models.Dessin", b =>
                {
                    b.HasOne("GestEase.Models.DocumentProjet", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GestEase.Models.DocumentProjet", null)
                        .WithMany("Dessins")
                        .HasForeignKey("DocumentProjetId");

                    b.HasOne("GestEase.Models.Projet", "Projet")
                        .WithMany()
                        .HasForeignKey("ProjetId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Document");

                    b.Navigation("Projet");
                });

            modelBuilder.Entity("GestEase.Models.DimensionProduit", b =>
                {
                    b.HasOne("GestEase.Models.Produit", "Produit")
                        .WithMany("Dimensions")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("GestEase.Models.DocumentProjet", b =>
                {
                    b.HasOne("GestEase.Models.Projet", "Projet")
                        .WithMany()
                        .HasForeignKey("ProjetId");

                    b.Navigation("Projet");
                });

            modelBuilder.Entity("GestEase.Models.Facture", b =>
                {
                    b.HasOne("GestEase.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestEase.Models.Commande", "Commande")
                        .WithMany()
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Commande");
                });

            modelBuilder.Entity("GestEase.Models.HistoriquePrix", b =>
                {
                    b.HasOne("GestEase.Models.Produit", "Produit")
                        .WithMany()
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("GestEase.Models.Produit", b =>
                {
                    b.HasOne("GestEase.Models.Categorie", null)
                        .WithMany()
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GestEase.Models.Fournisseur", "Fournisseur")
                        .WithMany("Produits")
                        .HasForeignKey("FournisseurId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Fournisseur");
                });

            modelBuilder.Entity("GestEase.Models.Projet", b =>
                {
                    b.HasOne("GestEase.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("GestEase.Models.StockProduit", b =>
                {
                    b.HasOne("GestEase.Models.Produit", "Produit")
                        .WithMany()
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestEase.Models.Projet", "Projet")
                        .WithMany()
                        .HasForeignKey("ProjetId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Produit");

                    b.Navigation("Projet");
                });

            modelBuilder.Entity("GestEase.Models.DocumentProjet", b =>
                {
                    b.Navigation("Dessins");
                });

            modelBuilder.Entity("GestEase.Models.Fournisseur", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("GestEase.Models.Produit", b =>
                {
                    b.Navigation("Dimensions");
                });
#pragma warning restore 612, 618
        }
    }
}
